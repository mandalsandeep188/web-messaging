{"version":3,"sources":["logo.svg","actions/constants.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","containers/HomePage/index.js","actions/user.actions.js","components/UI/Card/index.js","containers/LoginPage/index.js","containers/RegisterPage/index.js","components/PrivateRoute.js","App.js","reportWebVitals.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["authConstant","userConstants","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","authenticated","to","margin","color","fontWeight","firstName","lastName","onClick","uid","a","type","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","payload","Layout","children","User","user","src","alt","flex","justifyContent","HomePage","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","length","getRealtimeConversatoins","map","con","textAlign","value","onChange","e","target","placeholder","msgObj","add","isView","createdAt","Date","updateMessage","Card","LoginPage","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","RegisterPage","setFirstName","setLastName","createUserWithEmailAndPassword","currentUser","updateProfile","set","signup","PrivateRoute","Component","component","rest","getItem","parse","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authenticating","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eafcc5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const authConstant = {\r\n    USER_LOGIN: 'USER_LOGIN',\r\n    USER_LOGOUT: 'USER_LOGOUT'\r\n}\r\n\r\n\r\nexport const userConstants = {\r\n\r\n    GET_REALTIME_USERS: 'GET_REALTIME_USERS',\r\n    GET_REALTIME_MESSAGES: 'GET_REALTIME_MESSAGES'\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport './style.css';\r\nimport { logout } from '../../actions';\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n    const auth = useSelector( state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n    // const logout = () => {\r\n        \r\n    //     dispatch(logout());\r\n    // }\r\n  return(\r\n    <header className = \"header\">\r\n        <div style = {{display: \"flex\"}}>\r\n            <div className = \"logo\">Web Messenger</div>\r\n\r\n            {\r\n                !auth.authenticated ?\r\n            <ul className = \"leftMenu\">\r\n                <li><NavLink to = {'/login'}>Login</NavLink></li>\r\n                <li><NavLink to = {'/signup'}>Sign up</NavLink></li>\r\n            </ul> : null\r\n            }\r\n\r\n\r\n        </div>\r\n        <div style = {{margin: '20px 0', color : '#fff', fontWeight: 'bold'}}>\r\n            {auth.authenticated ? `Hi ${auth.firstName} ${auth.lastName}` : ''}\r\n        </div>\r\n        <ul className = \"menu\">\r\n\r\n\r\n            {\r\n                auth.authenticated ?\r\n            <li>\r\n                <Link to = {'#'} onClick = {() => {\r\n                    dispatch(logout(auth.uid))\r\n                }}>Logout</Link>\r\n            </li> : null\r\n            }\r\n        </ul>\r\n    </header>\r\n   )\r\n\r\n }\r\n\r\nexport default Header","// import auth from 'firebase';\r\n// import firestore from 'firebase';\r\nimport { auth, firestore } from 'firebase';\r\nimport { authConstant } from './constants';\r\nimport { getRealtimeUsers } from './user.actions';\r\n\r\n\r\nexport const signup = (user) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const db = firestore();\r\n\r\n        dispatch({ type: `${authConstant.USER_LOGIN}_REQUEST` });\r\n        auth()\r\n            .createUserWithEmailAndPassword(user.email, user.password)\r\n            .then((data) => {\r\n                console.log(data);\r\n                const currentUser = auth().currentUser;\r\n                const name = `${user.firstName} ${user.lastName}`;\r\n                currentUser.updateProfile({\r\n                    displayName: name\r\n                })\r\n                    .then(() => {\r\n\r\n                        // successfully updated\r\n                        db.collection('users')\r\n                            .doc(data.user.uid)\r\n                            .set({\r\n\r\n                                firstName: user.firstName,\r\n                                lastName: user.lastName,\r\n                                uid: data.user.uid,\r\n                                createdAt: new Date(),\r\n                                isOnline: true\r\n                            })\r\n                            .then(() => {\r\n                                //successful\r\n\r\n                                const loggedInUser = {\r\n                                    firstName: user.firstName,\r\n                                    lastName: user.lastName,\r\n                                    uid: data.user.uid,\r\n                                    email: user.email\r\n                                    // token: user.user.token\r\n                                }\r\n\r\n                                localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n                                console.log('User logged in successfully!');\r\n                                dispatch({\r\n                                    type: `${authConstant.USER_LOGIN}_SUCCESS`,\r\n                                    payload: { user: loggedInUser }\r\n                                })\r\n\r\n\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                dispatch({\r\n                                    type: `${authConstant.USER_LOGIN}_FAILURE`,\r\n                                    payload: { error }\r\n\r\n                                });\r\n                            })\r\n                    });\r\n            })\r\n\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const signin = (user) => {\r\n    return async dispatch => {\r\n        dispatch({ type: `${authConstant.USER_LOGIN}_REQUEST` });\r\n        auth()\r\n            .signInWithEmailAndPassword(user.email, user.password)\r\n\r\n\r\n            .then((data) => {\r\n\r\n                console.log(data);\r\n\r\n                const db = firestore();\r\n                db.collection('users')\r\n                    .doc(data.user.uid)\r\n                    .update({\r\n                        isOnline: true\r\n                    })\r\n                    .then(() => {\r\n                        const name = data.user.displayName.split(\" \");\r\n                        const firstName = name[0];\r\n                        const lastName = name[1];\r\n\r\n                        const loggedInUser = {\r\n                            firstName,\r\n                            lastName,\r\n                            uid: data.user.uid,\r\n                            email: data.user.email\r\n                            // token: user.user.token\r\n                        }\r\n\r\n                        localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n\r\n                        dispatch({\r\n                            type: `${authConstant.USER_LOGIN}_SUCCESS`,\r\n                            payload: { user: loggedInUser }\r\n                        });\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    })\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n            .catch(error => {\r\n                console.log(error);\r\n\r\n                dispatch({\r\n                    type: `${authConstant.USER_LOGIN}_FAILURE`,\r\n                    payload: { error }\r\n                })\r\n            })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const isLoggedInUser = () => {\r\n    return async dispatch => {\r\n\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n        if (user) {\r\n            dispatch({\r\n                type: `${authConstant.USER_LOGIN}_SUCCESS`,\r\n                payload: { user }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: `${authConstant.USER_LOGIN}_FAILURE`,\r\n                payload: { error: 'Login again please' }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const logout = (uid) => {\r\n    return async dispatch => {\r\n        dispatch({ type: `${authConstant.USER_LOGOUT}_REQUEST` });\r\n        //Now lets logout user\r\n\r\n        const db = firestore();\r\n\r\n        db.collection('users')\r\n            .doc(uid)\r\n            .update({\r\n                isOnline: false\r\n            })\r\n            .then(() => {\r\n\r\n                auth()\r\n                    .signOut()\r\n                    .then(() => {\r\n\r\n                        //successfully\r\n\r\n                        localStorage.clear();\r\n                        dispatch({ type: `${authConstant.USER_LOGOUT}_SUCCESS` });\r\n\r\n\r\n                    })\r\n                    .catch(error => {\r\n\r\n                        console.log(error);\r\n                        dispatch({ type: `${authConstant.USER_LOGOUT}_FAILURE`, payload: { error } })\r\n\r\n                    })\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}","import React from 'react';\r\nimport Header from '../Header';\r\n\r\n/**\r\n* @author\r\n* @function Layout\r\n**/\r\n\r\nconst Layout = (props) => {\r\n  return(\r\n    <div>\r\n        <Header />\r\n        {props.children}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Layout","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRealtimeConversatoins, getRealtimeUsers, updateMessage } from '../../actions';\r\nimport Layout from '../../components/Layout';\r\nimport './style.css';\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, onClick } = props;\r\n\r\n  return (\r\n    <div onClick={() => onClick(user)} className=\"displayName\">\r\n      <div className=\"displayPic\">\r\n        <img src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\" alt=\"\" />\r\n      </div>\r\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px' }}>\r\n        <span style={{ fontWeight: 500 }}>{user.firstName} {user.lastName}</span>\r\n        <span className={user.isOnline ? 'onlineStatus' : 'onlineStatus off'}></span>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst HomePage = (props) => {\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const user = useSelector(state => state.user);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [userUid, setUserUid] = useState(null);\r\n\r\n\r\n  let unsubscribe;\r\n\r\n  useEffect(() => {\r\n\r\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid))\r\n      .then(unsubscribe => {\r\n        return unsubscribe;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n\r\n\r\n     \r\n  }, []);\r\n\r\n  // console.log(user);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      unsubscribe.then(f => f()).catch(error => console.log(error));\r\n    }\r\n  }, []);\r\n\r\n\r\n  const initChat = (user) => {\r\n\r\n\r\n    setChatStarted(true);\r\n    setChatUser(`${user.firstName} ${user.lastName}`);\r\n    setUserUid(user.uid);\r\n    console.log(user);\r\n\r\n\r\n\r\n    dispatch(getRealtimeConversatoins({ uid_1: auth.uid, uid_2: user.uid}));\r\n\r\n  }\r\n\r\n\r\n  const submitMessage = (e) => {\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message\r\n    }\r\n\r\n    if(message != \"\"){\r\n      dispatch(updateMessage(msgObj))\r\n      .then(() => {\r\n        setMessage('')\r\n      });\r\n    }\r\n\r\n    // console.log(msgObject)\r\n  }\r\n\r\n  return (\r\n\r\n    <Layout>\r\n\r\n      <section className=\"container\">\r\n        <div className=\"listOfUsers\">\r\n\r\n\r\n\r\n          {\r\n            user.users.length > 0 ?\r\n              user.users.map(user => {\r\n\r\n                return (\r\n                  <User\r\n\r\n                    onClick={initChat}\r\n                    key={user.uid}\r\n                    user={user} />\r\n                );\r\n              }) : null\r\n          }\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"chatArea\">\r\n          <div className=\"chatHeader\">\r\n            {\r\n              chatStarted ? chatUser : ''\r\n              // console.log(\"current value of chatStarted is : \"+chatStarted)\r\n              \r\n            }\r\n          </div>\r\n            \r\n          <div className=\"messageSections\">\r\n\r\n            {\r\n              chatStarted ?\r\n              user.conversations.map(con => \r\n                <div style={{ textAlign: con.user_uid_1 == auth.uid? 'right' : 'left' }}>\r\n                  <p className=\"messageStyle\" >{con.message}</p>\r\n                </div>\r\n                )\r\n\r\n\r\n                : null\r\n\r\n            }\r\n\r\n\r\n          </div>\r\n          {\r\n            chatStarted ?\r\n              <div className=\"chatControls\">\r\n                <textarea\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Write Message\"\r\n                />\r\n                <button onClick={submitMessage}>Send</button>\r\n              </div> : null\r\n\r\n          }\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import { userConstants } from \"./constants\"\r\nimport { firestore } from 'firebase';\r\n\r\nexport const getRealtimeUsers = (uid) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n\r\n        const db = firestore();\r\n\r\n        const unsubscribe = db.collection(\"users\")\r\n        // .where(\"uid\", \"!=\", uid)\r\n            .onSnapshot((querySnapshot) => {\r\n                const users = [];\r\n                querySnapshot.forEach(function (doc)  {\r\n\r\n                    if(doc.data().uid != uid){\r\n\r\n                        users.push(doc.data());\r\n                    }\r\n                });\r\n                // console.log(users);\r\n\r\n\r\n                dispatch({ \r\n                    \r\n                    type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n                    payload: {users}\r\n                    \r\n\r\n                });\r\n\r\n            });\r\n            return unsubscribe;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const updateMessage = (msgObj) =>  {\r\n    return async dispatch => {\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n        .add({\r\n            ...msgObj,\r\n            isView: false,\r\n            createdAt: new Date()\r\n        })\r\n        .then( (data) => {\r\n            console.log(data);\r\n\r\n            //success\r\n            // dispatch({\r\n            //     type: userConstants.GET_REALTIME_MESSAGES,\r\n            // })\r\n\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getRealtimeConversatoins = (user) => {\r\n    return async dispatch => {\r\n\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n        .where('user_uid_1', 'in', [user.uid_1, user.uid_2])\r\n        .orderBy('createdAt', 'asc')\r\n        .onSnapshot((querySnapshot) => {\r\n\r\n\r\n            const conversations = [];\r\n            querySnapshot.forEach(doc => {\r\n\r\n\r\n                if(\r\n                    (doc.data().user_uid_1 == user.uid_1 && doc.data().user_uid_2 == user.uid_2)\r\n                    ||\r\n                    (doc.data().user_uid_1 == user.uid_2 && doc.data().user_uid_2 == user.uid_1)\r\n                ){\r\n\r\n                    conversations.push(doc.data())\r\n                }\r\n\r\n                if(conversations.length > 0){\r\n                    dispatch({\r\n                        type: userConstants.GET_REALTIME_MESSAGES,\r\n                        payload: {conversations}\r\n                    })\r\n                }else{\r\n                    dispatch({\r\n                        type: `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`,\r\n                        payload: {conversations }\r\n                    })\r\n                }\r\n\r\n            });\r\n\r\n            console.log(conversations);\r\n\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport './style.css';\r\n\r\n\r\n/**\r\n* @author\r\n* @function Card\r\n**/\r\n\r\nconst Card = (props) => {\r\n  return(\r\n    <div className = \"card\">\r\n        {props.children}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Card","import React, { useDebugValue, useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { isLoggedInUser, signin } from '../../actions/auth.actions';\r\nimport Layout from '../../components/Layout'\r\nimport Card from '../../components/UI/Card'\r\nimport './style.css';\r\n\r\n\r\n/**\r\n* @author\r\n* @function LoginPage\r\n**/\r\n\r\nconst LoginPage = (props) => {\r\n  \r\n  const[email, setEmail] = useState('');\r\n  const[password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  // useEffect(() => {\r\n  //   if(!auth.authenticated){\r\n  //     dispatch(isLoggedInUser())\r\n  //   }\r\n  // })\r\n\r\n  \r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if(email === \"\"){\r\n      alert(\"Email is required\");\r\n      return;\r\n    }\r\n    if(password === \"\"){\r\n      alert(\"Password is required\");\r\n      return;\r\n    }\r\n\r\n    dispatch(signin({email, password}));\r\n\r\n  }\r\n\r\n  if(auth.authenticated){\r\n    return <Redirect to={'/'} />\r\n  }\r\n\r\n\r\n  return(\r\n    <Layout>\r\n      <div className = \"loginContainer\">\r\n        <Card>\r\n          <form onSubmit = {userLogin}>\r\n            <input\r\n              name = \"email\"\r\n              type = \"text\"\r\n              // value = {email}\r\n              onChange = {(e) => setEmail(e.target.value)}\r\n              placeholder = \"Email\"\r\n            />\r\n\r\n\r\n              <input\r\n              name = \"password\"\r\n              type = \"password\"\r\n              // value = {password}\r\n              onChange = {(e) => setPassword(e.target.value)}\r\n              placeholder = \"Password\"\r\n            />\r\n\r\n\r\n            <div>\r\n              <button>Login</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default LoginPage","import React, {useState} from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport Card from '../../components/UI/Card'\r\nimport {signup} from '../../actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\n/**\r\n* @author\r\n* @function RegisterPage\r\n**/\r\n\r\nconst RegisterPage = (props) => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // const auth = useSelector(state => state.auth);\r\n\r\n  const registerUser = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      firstName, lastName, email, password\r\n    }\r\n    \r\n    dispatch(signup(user))\r\n  }\r\n\r\n  if(auth.authenticated){\r\n    return <Redirect to = {'/'} />\r\n  }  \r\n\r\n  return(\r\n    <Layout>\r\n      <div className = \"registerContainer\">\r\n        <Card>\r\n          <form onSubmit = {registerUser}>\r\n\r\n\r\n          <h3>Sign up</h3>\r\n          <input\r\n              name = \"firstName\"\r\n              type = \"text\"\r\n              // value = {firstName}\r\n              onChange = {(e) => setFirstName(e.target.value)}\r\n              placeholder = \"First Name\"\r\n            />\r\n\r\n\r\n<input\r\n              name = \"lastName\"\r\n              type = \"text\"\r\n              // value = {lastName}\r\n              onChange = {(e) => setLastName(e.target.value)}\r\n              placeholder = \"Last Name\"\r\n\r\n            />\r\n\r\n<input\r\n              name = \"email\"\r\n              type = \"text\"\r\n              // value = {email}\r\n              onChange = {(e) => setEmail(e.target.value)}\r\n              placeholder = \"Email\"\r\n            />\r\n\r\n<input\r\n              name = \"password\"\r\n              type = \"password\"\r\n              // value = {password}\r\n              onChange = {(e) => setPassword(e.target.value)}\r\n              placeholder = \"Password\"\r\n            />\r\n\r\n            <div>\r\n              <button>Sign up</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n\r\n      </div>\r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default RegisterPage","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\n/**\r\n* @author\r\n* @function PrivateRoute\r\n**/\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n  return(\r\n    <Route {...rest} component = {(props) => {\r\n      const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n\r\n      if(user){\r\n        return <Component {...props}/>\r\n      }else{\r\n        return <Redirect to={'/login'} />\r\n      }\r\n\r\n    }} />\r\n   )\r\n\r\n }\r\n\r\nexport default PrivateRoute","import logo from './logo.svg';\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './containers/HomePage';\nimport LoginPage from './containers/LoginPage';\nimport RegisterPage from './containers/RegisterPage';\nimport PrivateRoute from './components/PrivateRoute';\nimport { isLoggedInUser} from './actions';\nimport { useDispatch, useSelector } from 'react-redux';\nfunction App() {\n\n  const auth = useSelector(state => state.auth);\nconst dispatch = useDispatch();\n\n  useEffect(() => {\n    if(!auth.authenticated){\n      dispatch(isLoggedInUser())\n    } \n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* only logged in user can access home route */}\n        <PrivateRoute path=\"/\" exact component={HomePage} />\n        \n        \n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/signup\" component={RegisterPage} />\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { authConstant } from '../actions/constants';\r\n\r\nconst initState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    error: null\r\n}\r\n\r\n\r\n\r\n\r\nexport default (state = initState, action) => {\r\n\r\n\r\n    console.log(action);\r\n\r\n\r\n    \r\n    switch(action.type){\r\n\r\n        case `${authConstant.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }    \r\n\r\n            break;\r\n        case `${authConstant.USER_LOGIN}_SUCCESS`:\r\n\r\n            state = {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case `${authConstant.USER_LOGIN}_FAILURE`:\r\n\r\n            state = {\r\n                ...state,\r\n                authenticated: false,\r\n                authenticating: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case `${authConstant.USER_LOGOUT}_REQUEST` : \r\n            break;\r\n        \r\n        case `${authConstant.USER_LOGOUT}_SUCCESS` : \r\n            \r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        \r\n        case `${authConstant.USER_LOGOUT}_FAILURE`:\r\n\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        \r\n\r\n    }\r\n\r\n\r\n    return state;\r\n\r\n}","import { userConstants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    users: [],\r\n    conversations: []\r\n}\r\n\r\n\r\n\r\nexport default (state = initState, action) => {\r\n\r\n\r\n    switch(action.type){\r\n        \r\n\r\n        case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n            break;\r\n\r\n        case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n            break;\r\n\r\n        case userConstants.GET_REALTIME_MESSAGES:\r\n            state = {\r\n\r\n                ...state,\r\n                conversations: action.payload.conversations\r\n            }\r\n            break;\r\n    }\r\n\r\n    return state;\r\n    \r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth.reducer';\r\nimport userReducer from './user.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer\r\n});\r\n\r\n\r\nexport default rootReducer;","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\n\r\nconst store = createStore( rootReducer, applyMiddleware(thunk) );\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBZW7o6d24cNuywBFQFXuYnbOoDSoJ-hTg\",\n  authDomain: \"web-messenger-40c9b.firebaseapp.com\",\n  projectId: \"web-messenger-40c9b\",\n  storageBucket: \"web-messenger-40c9b.appspot.com\",\n  messagingSenderId: \"645405261953\",\n  appId: \"1:645405261953:web:4da0517c6d1cd989a9cd80\",\n  measurementId: \"G-HRWL1043SH\"\n};\n// Initialize Firebase\n\n\nfirebase.initializeApp(firebaseConfig);\n\n\nwindow.store = store;\n\nReactDOM.render(\n\n  <Provider store = {store}>\n\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}